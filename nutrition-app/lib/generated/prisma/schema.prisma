generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model components {
  component_id         Int                  @id @default(autoincrement())
  meal_id              Int?
  component_name       String               @db.VarChar(100)
  before_cook_weight_g Decimal?             @db.Decimal(10, 2)
  after_cook_weight_g  Decimal?             @db.Decimal(10, 2)
  created_at           DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?            @default(now()) @db.Timestamptz(6)
  meals                meals?               @relation(fields: [meal_id], references: [meal_id], onDelete: Cascade, onUpdate: NoAction)
  recipe_ingredients   recipe_ingredients[]
  component_portions   component_portions[]
}

model component_portions {
  portion_id     Int        @id @default(autoincrement())
  component_id   Int
  label          String     @db.VarChar(20)
  total_weight_g Decimal    @db.Decimal(10, 2)
  components     components @relation(fields: [component_id], references: [component_id], onDelete: Cascade, onUpdate: NoAction)
  created_at     DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?  @default(now()) @db.Timestamptz(6)

  @@unique([component_id, label])
}

model ingredients {
  ingredient_id      Int                  @id @default(autoincrement())
  ingredient_name    String               @unique @db.VarChar(100)
  default_unit       String               @db.VarChar(20)
  calories_per_100g  Decimal              @db.Decimal(10, 2)
  fat_g              Decimal              @db.Decimal(10, 2)
  protein_g          Decimal              @db.Decimal(10, 2)
  carbohydrates_g    Decimal              @db.Decimal(10, 2)
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  recipe_ingredients recipe_ingredients[]
}

model meals {
  meal_id         Int               @id @default(autoincrement())
  meal_name       String            @unique @db.VarChar(100)
  description     String?
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  components      components[]
  portion_options portion_options[]
}

model portion_options {
  portion_id Int       @id @default(autoincrement())
  meal_id    Int?
  size_name  String    @db.VarChar(20)
  multiplier Decimal   @db.Decimal(5, 2)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  meals      meals?    @relation(fields: [meal_id], references: [meal_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([meal_id, size_name])
}

model recipe_ingredients {
  component_id      Int
  ingredient_id     Int
  raw_quantity_g    Decimal     @db.Decimal(10, 2)
  cooked_quantity_g Decimal?    @db.Decimal(10, 2)
  created_at        DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?   @default(now()) @db.Timestamptz(6)
  components        components  @relation(fields: [component_id], references: [component_id], onDelete: Cascade, onUpdate: NoAction)
  ingredients       ingredients @relation(fields: [ingredient_id], references: [ingredient_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([component_id, ingredient_id])
}
